#!/bin/sh
# Copyright (C) 2010-2019 The ESPResSo project
# 
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.
#

if test -n "$PYTHONPATH"; then
  PYTHONPATH="/home/ubuntu/projs/espresso/build/src/python:$PYTHONPATH"
else
  PYTHONPATH="/home/ubuntu/projs/espresso/build/src/python"
fi
export PYTHONPATH

if [ "GNU" != "GNU" ] && [ "OFF" = "ON" ]; then
  asan_lib=$("/usr/bin/g++-8" /dev/null -### -o /dev/null -fsanitize=address 2>&1 | grep -o '[" ][^" ]*libclang_rt.asan[^" ]*[^s][" ]' | sed 's/[" ]//g' | sed 's/\.a$/.so/g')
  for lib in $asan_lib; do
      test -f $lib && LD_PRELOAD="$lib $LD_PRELOAD"
  done
fi
if [ "GNU" != "GNU" ] && [ "OFF" = "ON" ] && [ "OFF" != "ON" ]; then
  ubsan_lib=$("/usr/bin/g++-8" /dev/null -### -o /dev/null -fsanitize=undefined 2>&1 | grep -o '[" ][^" ]*libclang_rt.ubsan[^" ]*[^s][" ]' | sed 's/[" ]//g' | sed 's/\.a$/.so/g')
  for lib in $ubsan_lib; do
    test -f $lib && LD_PRELOAD="$lib $LD_PRELOAD"
  done
fi
export LD_PRELOAD
if [ "OFF" = "ON" ]; then
  if [ "OFF" = "ON" ]; then
    export UBSAN_OPTIONS="halt_on_error=1 print_stacktrace=1 suppressions=/home/ubuntu/projs/espresso/tools/ubsan-suppressions.txt $UBSAN_OPTIONS"
  else
    export UBSAN_OPTIONS="print_stacktrace=1 suppressions=/home/ubuntu/projs/espresso/tools/ubsan-suppressions.txt $UBSAN_OPTIONS"
  fi
fi
if [ "OFF" = "ON" ]; then
  if [ "OFF" = "ON" ]; then
    ASAN_OPTIONS="halt_on_error=1 protect_shadow_gap=0 $ASAN_OPTIONS"
  else
    ASAN_OPTIONS="protect_shadow_gap=0 $ASAN_OPTIONS"
  fi
  if [ "$1" = "--leaks" ]; then
    shift
  else
    ASAN_OPTIONS="$ASAN_OPTIONS detect_leaks=0"
  fi
  export ASAN_OPTIONS
fi
if [ "" = "ON" ] && [ "OFF" = "ON" ]; then
  export MSAN_OPTIONS="halt_on_error=1 $MSAN_OPTIONS"
fi

case $1 in
    --gdb)
        shift
        [ "/home/ubuntu/env/bin/python3" = "IPYTHON_EXECUTABLE-NOTFOUND" ] && exec gdb -ex "set print thread-events off" -ex "set exec-wrapper sh -c 'exec \"IPYTHON_EXECUTABLE-NOTFOUND\" \"\$@\"'" --args "/home/ubuntu/env/bin/python3" "$@"
        exec gdb --args /home/ubuntu/env/bin/python3 "$@"
        ;;
    --lldb)
        shift
        exec lldb -- /home/ubuntu/env/bin/python3 "$@"
        ;;
    --valgrind)
        shift
        exec valgrind --leak-check=full /home/ubuntu/env/bin/python3 "$@"
        ;;
    --cuda-gdb)
        shift
        exec cuda-gdb --args /home/ubuntu/env/bin/python3 "$@"
        ;;
    --cuda-memcheck)
        shift
        exec cuda-memcheck /home/ubuntu/env/bin/python3 "$@"
        ;;
    --gdb=*)
        options="${1#*=}"
        shift
        [ "/home/ubuntu/env/bin/python3" = "IPYTHON_EXECUTABLE-NOTFOUND" ] && exec gdb -ex "set print thread-events off" -ex "set exec-wrapper sh -c 'exec \"IPYTHON_EXECUTABLE-NOTFOUND\" \"\$@\"'" ${options} --args "/home/ubuntu/env/bin/python3" "$@"
        exec gdb ${options} --args /home/ubuntu/env/bin/python3 "$@"
        ;;
    --lldb=*)
        options="${1#*=}"
        shift
        exec lldb ${options} -- /home/ubuntu/env/bin/python3 "$@"
        ;;
    --valgrind=*)
        options="${1#*=}"
        shift
        exec valgrind ${options} /home/ubuntu/env/bin/python3 "$@"
        ;;
    --cuda-gdb=*)
        options="${1#*=}"
        shift
        exec cuda-gdb ${options} --args /home/ubuntu/env/bin/python3 "$@"
        ;;
    --cuda-memcheck=*)
        options="${1#*=}"
        shift
        exec cuda-memcheck ${options} /home/ubuntu/env/bin/python3 "$@"
        ;;
    *)
        exec /home/ubuntu/env/bin/python3 "$@"
        ;;
esac
